name: release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  snapshot:
    if: startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - uses: goreleaser/goreleaser-action@v6
        if: ${{ hashFiles('cmd/comp/**') != '' }}
        with:
          version: v2.12.7
          args: release --snapshot --skip=publish --clean

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    env:
      CS_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      CS_REPO: ${{ secrets.CLOUDSMITH_REPO }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.12.7
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
      - name: Upload .deb packages to Cloudsmith (optional)
        if: ${{ env.CS_API_KEY != '' }}
        run: |
          set -euo pipefail
          python3 -m pip install --user --upgrade cloudsmith-cli
          export PATH="$HOME/.local/bin:$PATH"
          shopt -s nullglob
          for deb in dist/*.deb; do
            echo "Pushing $deb to Cloudsmith $CS_REPO/any-distro/any-version"
            cloudsmith push deb "$CS_REPO/any-distro/any-version" "$deb" --api-key "$CS_API_KEY"
          done
